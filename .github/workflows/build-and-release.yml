name: Build and Release

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set tag name
        id: set_tag_name
        run: |
          today=$(date +%Y-%m-%d)
          latest_tag=$(git describe --tags --match "${today}.*" --abbrev=0)
          if [ -z "${latest_tag}" ]; then
            echo "::set-output name=tag_name::${today}.1"
          else
            latest_tag_number=$(echo "${latest_tag}" | awk -F '.' '{print $NF}')
            next_tag_number=$((latest_tag_number+1))
            echo "::set-output name=tag_name::${today}.${next_tag_number}"
          fi

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install project dependencies
        run: npm install

      - name: Run Grunt build
        run: npx grunt

      - name: Create release package
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag_name.outputs.tag_name }}
          release_name: NLB Stylesheets (${{ steps.set_tag_name.outputs.tag_name }})
          draft: false
          prerelease: false
          
      - name: Get the upload URL for the release asset
        id: upload_url
        run: echo "${{ steps.create_release.outputs.upload_url }}"

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          
      - name: Upload ebok.min.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./dist/css/ebok.min.css
          asset_name: ebok.min.css
          
      - name: Upload epub.min.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./dist/css/epub.min.css
          asset_name: epub.min.css
          
      - name: Upload html.min.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./dist/css/html.min.css
          asset_name: html.min.css
          
      - name: Upload ncc.min.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./dist/css/ncc.min.css
          asset_name: ncc.min.css
          
      - name: Upload nettleserbok.min.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./dist/css/nettleserbok.min.css
          asset_name: nettleserbok.min.css
          
      - name: Upload rb_smil_emulator.js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./dist/js/rb_smil_emulator.js
          asset_name: rb_smil_emulator.js
